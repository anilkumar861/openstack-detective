# Playbook to inspect logs for Nova instance activities
# Usage: Boot an instance (or have the UUID of a previously booted instance)
# ansible-playbook nova-trace-logs.yml -i hosts -e nova_instance=<uuid>
# View output at results/nova-trace-sorted-<uuid>.log
#
# To skip the debug flag check:
# ansible-playbook nova-trace-logs.yml -i hosts -e nova_instance=<uuid> -e force_debug_logs=false
# NOTE: You won't see full details of the instance without debug logs on.  But you have the option to check first without enabling them...

- hosts: controller
  name: Controller Checks
  remote_user: "{{ remote_user }}"
  become: "{{ become }}"
  vars:
    # If debug isn't enabled you won't get a full view of instance boot actions
    force_debug_logs: true
  roles:
    - common
  tasks:
 
    - name: Get Debug Settings
      shell: openstack-config --get {{ item }} DEFAULT debug
      register: openstack_config_debug
      changed_when: no
      ignore_errors: yes
      with_items: 
        - /etc/nova/nova.conf
        - /etc/neutron/neutron.conf
        - /etc/neutron/metadata_agent.ini
        - /etc/neutron/l3_agent.ini
        - /etc/neutron/dhcp_agent.ini
        - /etc/glance/glance-api.conf
        - /etc/glance/glance-registry.conf
        - /etc/cinder/cinder.conf
        - /etc/keystone/keystone.conf

    - name: Fail if debug set to false
      fail: msg="Debug set to false in {{ item.item }} on {{ ansible_hostname }}"
      when: "(force_debug_logs == true) and ({{ item.rc }} != 0 or '{{ item.stdout }}' == 'False' or '{{ item.stdout }}' == 'false')"
      changed_when: no
      with_items: "{{ openstack_config_debug.results }}"

    - name: Fail if nova_instance not set
      fail: msg="You must set a nova_instance variable to execute this playbook"
      when: "nova_instance is undefined"
      changed_when: no


    - name: Get Instance Logs 
      shell: grep {{ nova_instance }} {{ item }}
      register: instance_logs
      changed_when: no
      ignore_errors: yes
      with_items:
        - /var/log/nova/nova-api.log
        - /var/log/nova/nova-conductor.log
        - /var/log/nova/nova-consoleauth.log
        - /var/log/nova/nova-manage.log
        - /var/log/nova/nova-novncproxy.log
        - /var/log/nova/nova-scheduler.log
        - /var/log/neutron/dhcp-agent.log
        - /var/log/neutron/l3-agent.log
        - /var/log/neutron/metadata-agent.log
        - /var/log/neutron/openvswitch-agent.log
        - /var/log/neutron/server.log
        - /var/log/glance/api.log
        - /var/log/glance/registry.log
        - /var/log/cinder/api.log
        - /var/log/cinder/cinder-manage.log
        - /var/log/cinder/scheduler.log
        - /var/log/cinder/volume.log
        - /var/log/keystone/keystone.log

- hosts: compute
  name: Compute Checks
  remote_user: "{{ remote_user }}"
  become: "{{ become }}"
  vars:
    # If debug isn't enabled you won't get a full view of instance boot actions
    force_debug_logs: true
  roles:
    - common
  tasks: 
    # TODO - Make more efficient by checking only the target hypervisor vs. all 
    - name: Get Debug Settings
      shell: openstack-config --get {{ item }} DEFAULT debug
      register: openstack_config_debug
      changed_when: no
      ignore_errors: yes
      with_items:
        - /etc/nova/nova.conf
        - /etc/neutron/neutron.conf

    - name: Fail if debug set to false
      fail: msg="Debug set to false in {{ item.item }} on {{ ansible_hostname }}"
      when: "(force_debug_logs == true) and ({{ item.rc }} != 0 or '{{ item.stdout }}' == 'False' or '{{ item.stdout }}' == 'false')"
      changed_when: no
      with_items: "{{ openstack_config_debug.results }}"

    - name: Get Instance Logs
      shell: grep {{ nova_instance }} {{ item }}
      register: instance_logs
      changed_when: no
      ignore_errors: yes
      with_items:
        - /var/log/nova/nova-compute.log
        - /var/log/neutron/openvswitch-agent.log

# TODO- Add instance console log check as well?

- hosts: localhost
  #gather_facts: True            # Needed for date/time in report
  become: false
  name: Generating config report
  vars:
    - debug: false
  tags:
    - report
  tasks:
    - name: Dump host vars
      debug: var=hostvars[item]
      with_items: "{{groups['all']}}"
      when: debug == true
 
    - local_action: template src=templates/nova-trace-logs.j2 dest={{result_dir}}/nova-trace-{{nova_instance}}.log
      become: false

    - name: Sort nova instance trace output
      shell: sort -k1 {{result_dir}}/nova-trace-{{nova_instance}}.log > {{result_dir}}/nova-trace-sorted-{{nova_instance}}.log


